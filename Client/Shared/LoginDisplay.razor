@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Respect.Client.Authentication
@inject NavigationManager Navigation
@inject HttpClient HttpClient
@inject AuthManager AuthManager

@if (isAuthenticated)
{
    <MudText>Hey there!</MudText>
    <MudButton Variant="Variant.Text" Color="Color.Default" OnClick="Logout"
               StartIcon="@Icons.Material.Filled.Logout">
        Log out
    </MudButton>
}
else
{
    <MudButton Variant="Variant.Text" Color="Color.Default" StartIcon="@Icons.Material.Filled.AppRegistration"
               Href="/login">
        Login / Register
    </MudButton>
}

@code{
    private bool isAuthenticated;

    protected override async Task<Task> OnInitializedAsync()
    {
        isAuthenticated = await AuthManager.IsAuthenticatedAsync();
        
        return base.OnInitializedAsync();
    }

    private async Task Logout()
    {
        await AuthManager.LogoutAsync();
        Navigation.NavigateTo("/", forceLoad: true);
    }
}