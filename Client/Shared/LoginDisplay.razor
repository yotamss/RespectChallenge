@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Respect.Client.Authentication
@inject NavigationManager Navigation
@inject HttpClient HttpClient
@inject AuthManager AuthManager

<MudText>Create, Share and Sign your petitions</MudText>
<MudSpacer></MudSpacer>

@if (isAuthenticated)
{
    <MudText>Hey user! </MudText>
    @* <MudSpacer></MudSpacer> *@
    <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="Logout"
               StartIcon="@Icons.Material.Filled.Logout">
        Log out
    </MudButton>
}
else
{
    <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" StartIcon="@Icons.Material.Filled.AppRegistration"
               Href="/login">
        Login / Register
    </MudButton>
}

@code{
    private bool isAuthenticated;

    protected override Task OnInitializedAsync()
    {
        isAuthenticated = AuthManager.IsAuthenticated();

        return base.OnInitializedAsync();
    }

    private void Logout()
    {
        AuthManager.Logout();
        Navigation.NavigateTo("/", forceLoad: true);
    }

}